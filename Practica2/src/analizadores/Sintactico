/*--------------- 1ra Area: Codigo de Usuario -----------------------*/
//-------> importaciones, paquetes
package analizadores;
import java_cup.runtime.Symbol;

//------> Codigo para el parser,variables, metodos
parser code{:
        

        public void syntax_error(Symbol s)
        {
            System.err.println("Error en la Linea " + (s.right+1) +" Columna "+(s.left+1)+ ". Identificador "+s.value + " no reconocido. Se ha recuperado del error." );
        }

        public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
        {
            System.err.println("Error en la Linea " + (s.right+1)+ " Columna "+(s.left+1)+". Identificador " +s.value + " no reconocido.");
        }
        
:}

/*--------------- 2da Area: Declaraciones -----------------------*/

//------> declaracion de terminales 
terminal String punto, cero, uno;

//------> declaracion de no terminales
non terminal Nodo S,  X, L, B;


//------> precedencia



start with S;

/*--------------- 3ra Area: Reglas Semanticas -----------------------*/

S ::=  X:a                {: System.out.println("Salida: "+a.val); :}      
       ;

X ::= L:l1 punto L:l2       {:
                                Nodo nodo = new Nodo();
                                nodo.val = l1.entero + l2.decimal;
                                RESULT = nodo;
                            :}
    | L:a               {:
                            Nodo nodo = new Nodo();
                            nodo.val = (int)a.entero;
                            RESULT = nodo;
                        :}
     ;

L ::= L:l1 B:b          {:
                            Nodo nodo = new Nodo();
                            nodo.entero = l1.entero*2 + (int)b.val;
                            nodo.aux = l1.aux / 2;
                            nodo.decimal = l1.decimal + b.val*nodo.aux;
                            RESULT = nodo;
                        :}
    | B:a               {:
                            Nodo nodo = new Nodo();
                            nodo.entero = (int)a.val;
                            nodo.aux = 0.5;
                            nodo.decimal = a.val * 0.5;
                            RESULT = nodo;
                        :}
    ;

B ::= cero:b            {:
                            Nodo nodo = new Nodo();
                            nodo.val = 0;
                            RESULT = nodo;
                        :}
    | uno:a             {:
                            Nodo nodo = new Nodo();
                            nodo.val = 1;
                            RESULT = nodo;
                        :}
    ;




